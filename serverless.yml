service: vnstock-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.12
  region: ${opt:region, 'ap-southeast-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 30
  logRetentionInDays: 30
  environment:
    ENVIRONMENT: ${self:provider.stage}
    REDIS_HOST: ${env:REDIS_HOST, ''}
    REDIS_PORT: ${env:REDIS_PORT, '6379'}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD, ''}
    CACHE_ENABLED: ${env:CACHE_ENABLED, 'true'}
    CACHE_DEFAULT_TIMEOUT: ${env:CACHE_DEFAULT_TIMEOUT, '3600'}
    SUPABASE_URL: ${env:SUPABASE_URL, ''}
    SUPABASE_KEY: ${env:SUPABASE_KEY, ''}
    RATE_LIMIT_PER_MIN: ${env:RATE_LIMIT_PER_MIN, '60'}
  
package:
  individually: true
  patterns:
    - '!./**'
    - 'app/**'
    - '!.env*'
    - '!.github/**'
    - '!tests/**'
    - '!docs/**'
    - '!scripts/**'
    - '!.git/**'
    - '!infrastructure/**'
    - '!.vscode/**'

functions:
  api:
    handler: app.main.handler
    package:
      patterns:
        - 'app/**'
        - '!app/**/*.pyc'
    events:
      - httpApi:
          path: '/{proxy+}'
          method: any
    provisionedConcurrency: ${env:PROVISIONED_CONCURRENCY, 0}
    environment:
      DEBUG: ${env:DEBUG, 'false'}

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true
    zip: true
    slim: true
    useDownloadCache: true
    useStaticCache: true
    pythonBin: python3
  dotenv:
    path: .env
    include:
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      - CACHE_ENABLED
      - CACHE_DEFAULT_TIMEOUT
      - SUPABASE_URL
      - SUPABASE_KEY
      - RATE_LIMIT_PER_MIN
      - DEBUG
      - PROVISIONED_CONCURRENCY 